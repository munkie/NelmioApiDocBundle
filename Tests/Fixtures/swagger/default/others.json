{
  "swaggerVersion": "1.2",
  "apiVersion": "3.14",
  "basePath": "\/api",
  "resourcePath": "\/others",
  "apis": [
    {
      "path": "\/another-post",
      "operations": [
        {
          "method": "POST",
          "summary": "create another test",
          "nickname": "post_others",
          "parameters": [
            {
              "paramType": "form",
              "name": "dependency_type",
              "$ref": "dependency.type",
              "type": "dependency.type",
              "description": ""
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/any",
      "operations": []
    },
    {
      "path": "\/any\/{foo}",
      "operations": []
    },
    {
      "path": "\/authenticated",
      "operations": []
    },
    {
      "path": "\/jms-input-test",
      "operations": [
        {
          "method": "POST",
          "summary": "Testing JMS",
          "nickname": "post_others",
          "parameters": [
            {
              "paramType": "form",
              "name": "foo",
              "type": "string",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "bar",
              "type": "string",
              "format": "date-time",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "number",
              "type": "number",
              "format": "float",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "arr",
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": ""
            },
            {
              "paramType": "form",
              "name": "nested",
              "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested",
              "type": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "nested_array",
              "type": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested",
              "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested",
              "items": {
                "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested"
              },
              "description": ""
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/jms-return-test",
      "operations": [
        {
          "method": "GET",
          "summary": "Testing return",
          "nickname": "get_others",
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "See standard HTTP status code reason for 200",
              "responseModel": "dependency.type"
            }
          ],
          "type": "dependency.type"
        }
      ]
    },
    {
      "path": "\/my-commented\/{id}\/{page}\/{paramType}\/{param}",
      "operations": []
    },
    {
      "path": "\/popos",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves the collection of Popo resources.",
          "nickname": "get_others",
          "parameters": [],
          "responseMessages": [
            {
              "code": 200,
              "message": "See standard HTTP status code reason for 200",
              "responseModel": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
            }
          ],
          "type": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
        },
        {
          "method": "POST",
          "summary": "Creates a Popo resource.",
          "nickname": "post_others",
          "parameters": [
            {
              "paramType": "form",
              "name": "id",
              "type": "string",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "foo",
              "type": "string",
              "description": ""
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "See standard HTTP status code reason for 200",
              "responseModel": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
            }
          ],
          "type": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
        }
      ]
    },
    {
      "path": "\/popos\/{id}",
      "operations": [
        {
          "method": "GET",
          "summary": "Retrieves Popo resource.",
          "nickname": "get_others",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "See standard HTTP status code reason for 200",
              "responseModel": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
            }
          ],
          "type": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
        },
        {
          "method": "PUT",
          "summary": "Replaces the Popo resource.",
          "nickname": "put_others",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "string",
              "required": true
            },
            {
              "paramType": "form",
              "name": "id",
              "type": "string",
              "description": ""
            },
            {
              "paramType": "form",
              "name": "foo",
              "type": "string",
              "description": ""
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "message": "See standard HTTP status code reason for 200",
              "responseModel": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
            }
          ],
          "type": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo"
        },
        {
          "method": "DELETE",
          "summary": "Deletes the Popo resource.",
          "nickname": "delete_others",
          "parameters": [
            {
              "paramType": "path",
              "name": "id",
              "type": "string",
              "required": true
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/return-nested-output",
      "operations": []
    },
    {
      "path": "\/secure-route",
      "operations": []
    },
    {
      "path": "\/yet-another\/{id}",
      "operations": []
    },
    {
      "path": "\/z-action-with-deprecated-indicator",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "get_others",
          "parameters": [],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-action-with-nullable-request-param",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "post_others",
          "parameters": [
            {
              "paramType": "form",
              "name": "param1",
              "type": "string",
              "description": "Param1 description."
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-action-with-query-param",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "get_others",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "type": "string",
              "description": "Page of the overview."
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-action-with-query-param-no-default",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "get_others",
          "parameters": [
            {
              "paramType": "query",
              "name": "page",
              "type": "string",
              "description": "Page of the overview."
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-action-with-query-param-strict",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "get_others",
          "parameters": [],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-action-with-request-param",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "post_others",
          "parameters": [
            {
              "paramType": "form",
              "name": "param1",
              "type": "string",
              "description": "Param1 description."
            }
          ],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/z-return-jms-and-validator-output",
      "operations": []
    },
    {
      "path": "\/z-return-selected-parsers-input",
      "operations": []
    },
    {
      "path": "\/z-return-selected-parsers-output",
      "operations": []
    },
    {
      "path": "\/zcached",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "post_others",
          "parameters": [],
          "responseMessages": []
        }
      ]
    },
    {
      "path": "\/zsecured",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "post_others",
          "parameters": [],
          "responseMessages": []
        }
      ]
    }
  ],
  "models": {
    "dependency.type": {
      "id": "dependency.type",
      "description": "object (dependency_type)",
      "properties": {
        "a": {
          "type": "string",
          "description": "A nice description"
        }
      },
      "required": [
        "a"
      ]
    },
    "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsTest": {
      "id": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsTest",
      "description": "object (JmsTest)",
      "properties": {
        "foo": {
          "type": "string",
          "description": "string"
        },
        "bar": {
          "type": "string",
          "description": "DateTime",
          "format": "date-time"
        },
        "number": {
          "type": "number",
          "description": "double",
          "format": "float"
        },
        "arr": {
          "type": "array",
          "description": "array",
          "items": {
            "type": "string"
          }
        },
        "nested": {
          "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested"
        },
        "nested_array": {
          "type": "array",
          "description": "array of objects (JmsNested)",
          "items": {
            "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested"
          }
        }
      },
      "required": []
    },
    "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested": {
      "id": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested",
      "description": "object (JmsNested)",
      "properties": {
        "foo": {
          "type": "string",
          "description": "DateTime",
          "format": "date-time"
        },
        "bar": {
          "type": "string",
          "description": "string"
        },
        "baz": {
          "type": "array",
          "description": "Epic description.\n\nWith multiple lines.",
          "items": {
            "type": "integer"
          }
        },
        "circular": {
          "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsNested"
        },
        "parent": {
          "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.JmsTest"
        },
        "since": {
          "type": "string",
          "description": "string"
        },
        "until": {
          "type": "string",
          "description": "string"
        },
        "since_and_until": {
          "type": "string",
          "description": "string"
        }
      },
      "required": []
    },
    "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo": {
      "id": "dunglas.api.out.Nelmio.ApiDocBundle.Tests.Fixtures.Model.Popo",
      "description": "",
      "properties": {
        "id": {
          "type": null,
          "description": "integer"
        },
        "foo": {
          "type": null,
          "description": "string"
        }
      },
      "required": []
    },
    "Nelmio.ApiDocBundle.Tests.Fixtures.Model.Test": {
      "id": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.Test",
      "description": "array of objects (Test)",
      "properties": {
        "a": {
          "type": "string",
          "description": "string"
        },
        "b": {
          "type": "string",
          "description": "DateTime",
          "format": "date-time"
        }
      },
      "required": [
        "a"
      ]
    },
    "Nelmio.ApiDocBundle.Tests.Fixtures.Model.MultipleTest": {
      "id": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.MultipleTest",
      "description": "",
      "properties": {
        "bar": {
          "type": "string",
          "description": "DateTime",
          "format": "date-time"
        },
        "objects": {
          "type": "array",
          "description": "array of objects (Test)",
          "items": {
            "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.Test"
          }
        },
        "number": {
          "type": "string",
          "description": "DateTime",
          "format": "date-time"
        },
        "related": {
          "$ref": "Nelmio.ApiDocBundle.Tests.Fixtures.Model.Test"
        }
      },
      "required": []
    }
  },
  "produces": [],
  "consumes": [],
  "authorizations": {
    "apiKey": {
      "type": "apiKey",
      "passAs": "header",
      "keyname": "access_token"
    }
  }
}